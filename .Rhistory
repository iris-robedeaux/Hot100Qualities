Hot100Clean <- readRDS("C:/Users/Iris/Desktop/Capstone/Not Project 1/Hot100Qualities/Hot100Clean.rds")
View(Hot100Clean)
View(Hot100Clean)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(pander)
library(paletteer)
library(showtext)
library(sysfonts)
library(stringr)
#import the data file
musicData <- read.csv("C:\\Users\\Iris\\Desktop\\Capstone\\Not Project 1\\billboard_24years_lyrics_spotify.csv")
#change the band/singer column to "artist"
musicData <- musicData %>% rename_at('band_singer', ~'artist')
#
musicData <- musicData %>% group_by(song, artist) %>%
arrange(song, ranking) %>%
filter(row_number() == which.min(ranking)) %>% ungroup()
#remove unnecessary columns
musicData <- musicData %>% select(-songurl, -titletext, -url,
-lyrics, -uri, -type, -id,
-track_href, -analysis_url)
#remove rows without data
musicData <- musicData %>% drop_na(mode)
#make the key a factor
musicData$key <- as.factor(musicData$key)
#turn the key numbers into the key types
musicData <- musicData %>%
mutate(key = recode(key,   '0' = 'C',
'1' = 'C#',
'2' = 'D',
'3' = 'D#',
'4' = 'E',
'5' = 'F',
'6' = 'F#',
'7' = 'G',
'8' = 'G#',
'9' = 'A',
'10' = 'A#',
'11' = 'B'))
#make the mode a factor
musicData$mode <- as.factor(musicData$mode)
#turn the key numbers into the key types
musicData <- musicData %>%
mutate(mode = recode(key,   '0' = 'C',
'1' = 'C#',
'2' = 'D',
'3' = 'D#',
'4' = 'E',
'5' = 'F',
'6' = 'F#',
'7' = 'G',
'8' = 'G#',
'9' = 'A',
'10' = 'A#',
'11' = 'B'))
View(musicData)
#change the band/singer column to "artist"
musicData <- musicData %>% rename_at('band_singer', ~'artist')
#import the data file
musicData <- read.csv("C:\\Users\\Iris\\Desktop\\Capstone\\Not Project 1\\billboard_24years_lyrics_spotify.csv")
#change the band/singer column to "artist"
musicData <- musicData %>% rename_at('band_singer', ~'artist')
#
musicData <- musicData %>% group_by(song, artist) %>%
arrange(song, ranking) %>%
filter(row_number() == which.min(ranking)) %>% ungroup()
#remove unnecessary columns
musicData <- musicData %>% select(-songurl, -titletext, -url,
-lyrics, -uri, -type, -id,
-track_href, -analysis_url)
#remove rows without data
musicData <- musicData %>% drop_na(mode)
#make the key a factor
musicData$key <- as.factor(musicData$key)
#turn the key numbers into the key types
musicData <- musicData %>%
mutate(key = recode(key,   '0' = 'C',
'1' = 'C#',
'2' = 'D',
'3' = 'D#',
'4' = 'E',
'5' = 'F',
'6' = 'F#',
'7' = 'G',
'8' = 'G#',
'9' = 'A',
'10' = 'A#',
'11' = 'B'))
#make the mode a factor
musicData$mode <- as.factor(musicData$mode)
#turn the key numbers into the key types
musicData <- musicData %>%
mutate(mode = recode(mode,   '0' = 'minor',
'1' = 'major'))
View(musicData)
write.csv( musicData, "Hot100Qualities.csv", row.names = FALSE )
Hot100Qualities <- read.csv("Hot100Qualities.csv")
usethis::use_data(Hot100Qualities)
Hot100Qualities <- read.csv("Hot100Qualities.csv")
Hot100Qualities <- read.csv("Hot100Qualities.csv")
usethis::use_data(Hot100Qualities)
Hot100Qualities <- read.csv('data-raw/Hot100Qualities.csv')
usethis::use_data(Hot100Qualities)
View(Hot100Qualities)
View(Hot100Qualities)
